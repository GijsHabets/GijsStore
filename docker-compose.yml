version: "3.9"

services:
  db:
    image: postgres:16-alpine
    restart: unless-stopped
    environment:
      POSTGRES_DB: ${DB_NAME}
      POSTGRES_USER: ${DB_USER}
      POSTGRES_PASSWORD: ${DB_PASSWORD}
    volumes:
      - pgdata:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U $${POSTGRES_USER} -d $${POSTGRES_DB}"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - appnet

  backend:
    build:
      context: ./backendIpwrc
      dockerfile: Dockerfile
    restart: unless-stopped
    environment:
      DB_HOST: db
      DB_PORT: 5432
      DB_NAME: ${DB_NAME}
      DB_USER: ${DB_USER}
      DB_PASSWORD: ${DB_PASSWORD}
      # SPRING_PROFILES_ACTIVE: prod
    depends_on:
      db:
        condition: service_healthy
    ports:
      - "${HOST_BACKEND_PORT:-8080}:8080"   # handy for direct API testing
    networks:
      - appnet

  frontend:
    build:
      context: ./WebshopV3
      dockerfile: Dockerfile
    restart: unless-stopped
    depends_on:
      - backend
    ports:
      - "${HOST_HTTP_PORT:-80}:80"          # open the website at http://localhost
    networks:
      - appnet

networks:
  appnet:

volumes:
  pgdata:
